{"version":3,"sources":["components/layout/MainNavigation.module.css","components/quotes/QuoteForm.module.css","components/comments/NewCommentForm.module.css","components/quotes/QuoteList.module.css","components/quotes/QuoteItem.module.css","components/comments/Comments.module.css","components/comments/CommentItem.module.css","components/comments/CommentsList.module.css","components/quotes/HighlightedQuote.module.css","components/UI/Card.module.css","components/UI/LoadingSpinner.module.css","components/layout/Layout.module.css","components/quotes/QuoteItem.js","components/quotes/QuoteList.js","pages/NotFound.js","hooks/use-http.js","lib/api.js","pages/Allquote.js","components/comments/NewCommentForm.js","components/comments/CommentItem.js","components/comments/CommentsList.js","components/comments/Comments.js","components/quotes/HighlightedQuote.js","pages/QuoteDetail.js","components/UI/Card.js","components/UI/LoadingSpinner.js","components/quotes/QuoteForm.js","pages/Newquote.js","components/layout/MainNavigation.js","components/layout/Layout.js","App.js","index.js"],"names":["module","exports","QuoteItem","props","className","classes","item","text","author","to","id","QuoteList","quotes","ascending","navigate","useNavigate","location","useLocation","isSortingAscending","URLSearchParams","search","get","sortedQuotes","sort","quoteA","quoteB","console","log","sorting","onClick","replace","list","map","quote","NotFound","httpReducer","state","action","type","data","error","status","responseData","errorMessage","useHttp","requestFunction","startWithPending","useReducer","httpState","dispatch","sendRequest","useCallback","requestData","message","FIREBASE_DOMAIN","getAllQuotes","fetch","response","json","ok","Error","key","transformedQuotes","quoteObj","push","getSingleQuote","quoteId","loadedQuote","addQuote","quoteData","method","body","JSON","stringify","headers","addComment","commentData","commentId","name","getAllComments","transformedComments","commentObj","Allquote","loadedQuotes","useEffect","length","NewCommentForm","commentTextRef","useRef","onAddedComment","submitFormHandler","event","preventDefault","current","value","form","onSubmit","control","htmlFor","rows","ref","actions","CommentItem","CommentsList","comments","comment","Comments","useState","isAddingComment","setIsAddingComment","useParams","loadedComments","addedCommentHandler","HighlightedQuote","QuoteDetail","Params","Card","card","children","LoadingSpinner","spinner","QuoteForm","setIsEntering","authorInputRef","textInputRef","onFocus","enteredAuthor","enteredText","onAdd","isLoading","loading","NewQuote","history","MainNavigation","header","logo","nav","isActive","active","inactive","Layout","main","App","path","element","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ad646baf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__7l35S\",\"logo\":\"MainNavigation_logo__nhaIN\",\"nav\":\"MainNavigation_nav__3Any1\",\"active\":\"MainNavigation_active__NoR_I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"QuoteForm_form__3hFLW\",\"loading\":\"QuoteForm_loading__37Qfb\",\"control\":\"QuoteForm_control__3BUsn\",\"actions\":\"QuoteForm_actions__34woc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__f1HZE\",\"loading\":\"NewCommentForm_loading__oBs2c\",\"control\":\"NewCommentForm_control__1qEsh\",\"actions\":\"NewCommentForm_actions__1jL2Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuoteList_list__kl8OA\",\"sorting\":\"QuoteList_sorting__22pUK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__3uK6d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__2yuQM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CommentItem_item__1wD0T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"CommentsList_comments__1WTBb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"HighlightedQuote_quote__1gr_2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__ZYlyl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"LoadingSpinner_spinner__3dve8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__30S30\"};","import classes from './QuoteItem.module.css';\nimport { Link } from 'react-router-dom';\nconst QuoteItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <figure>\n        <blockquote>\n          <p>{props.text}</p>\n        </blockquote>\n        <figcaption>{props.author}</figcaption>\n      </figure>\n      <Link className='btn' to={`/quotes/${props.id}`}>\n        View Fullscreen\n      </Link>\n    </li>\n  );\n};\n\nexport default QuoteItem;\n","import { Fragment } from 'react';\nimport { useNavigate,useLocation } from 'react-router';\nimport QuoteItem from './QuoteItem';\nimport classes from './QuoteList.module.css';\nconst sortQuotes=(quotes,ascending)=>{\n  return quotes.sort((quoteA,quoteB)=>{\n    if(ascending){\n      return quoteA.id>quoteB.id?1:-1;\n    }\n    else{\n      return quoteA.id<quoteB.id?1:-1;\n    }\n  });\n\n}\nconst QuoteList = (props) => {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const queryParams=new URLSearchParams(location.search);\n  const isSortingAscending=queryParams.get('sort')==='asc';\n  const sortedQuotes=sortQuotes(props.quotes,isSortingAscending);\n  console.log(location);\n  const changeSortingHandler = () => {\n    navigate('/quotes?sort='+(!isSortingAscending?'asc':'desc'), { replace: true });\n  };\n\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick={changeSortingHandler}>{isSortingAscending?\"Sort Ascending\":\"Sort Descending\"}</button>\n      </div>\n      \n      <ul className={classes.list}>\n        {sortedQuotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n","const NotFound=()=>{\r\n    return(\r\n        <div>\r\n            <h1>404 Not Found</h1>\r\n        </div>\r\n    )\r\n}\r\nexport default NotFound;","import { useReducer, useCallback } from 'react';\n\nfunction httpReducer(state, action) {\n  if (action.type === 'SEND') {\n    return {\n      data: null,\n      error: null,\n      status: 'pending',\n    };\n  }\n\n  if (action.type === 'SUCCESS') {\n    return {\n      data: action.responseData,\n      error: null,\n      status: 'completed',\n    };\n  }\n\n  if (action.type === 'ERROR') {\n    return {\n      data: null,\n      error: action.errorMessage,\n      status: 'completed',\n    };\n  }\n\n  return state;\n}\n\nfunction useHttp(requestFunction, startWithPending = false) {\n  const [httpState, dispatch] = useReducer(httpReducer, {\n    status: startWithPending ? 'pending' : null,\n    data: null,\n    error: null,\n  });\n\n  const sendRequest = useCallback(\n    async function (requestData) {\n      dispatch({ type: 'SEND' });\n      try {\n        const responseData = await requestFunction(requestData);\n        dispatch({ type: 'SUCCESS', responseData });\n      } catch (error) {\n        dispatch({\n          type: 'ERROR',\n          errorMessage: error.message || 'Something went wrong!',\n        });\n      }\n    },\n    [requestFunction]\n  );\n\n  return {\n    sendRequest,\n    ...httpState,\n  };\n}\n\nexport default useHttp;\n","const FIREBASE_DOMAIN = 'https://quotes-36279-default-rtdb.firebaseio.com/';\n\nexport async function getAllQuotes() {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not fetch quotes.');\n  }\n\n  const transformedQuotes = [];\n\n  for (const key in data) {\n    const quoteObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedQuotes.push(quoteObj);\n  }\n\n  return transformedQuotes;\n}\n\nexport async function getSingleQuote(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes/${quoteId}.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not fetch quote.');\n  }\n\n  const loadedQuote = {\n    id: quoteId,\n    ...data,\n  };\n\n  return loadedQuote;\n}\n\nexport async function addQuote(quoteData) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`, {\n    method: 'POST',\n    body: JSON.stringify(quoteData),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not create quote.');\n  }\n\n  return null;\n}\n\nexport async function addComment(requestData) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${requestData.quoteId}.json`, {\n    method: 'POST',\n    body: JSON.stringify(requestData.commentData),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not add comment.');\n  }\n\n  return { commentId: data.name };\n}\n\nexport async function getAllComments(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${quoteId}.json`);\n\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not get comments.');\n  }\n\n  const transformedComments = [];\n\n  for (const key in data) {\n    const commentObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedComments.push(commentObj);\n  }\n\n  return transformedComments;\n}\n","import QuoteList from '../components/quotes/QuoteList';\r\nimport {useEffect} from 'react';\r\nimport NotFound from './NotFound';\r\nimport useHttp from '../hooks/use-http';\r\nimport {getAllQuotes} from '../lib/api';\r\nfunction Allquote(){\r\n    const {sendRequest,status,data:loadedQuotes,error}=useHttp(getAllQuotes,true);\r\n    useEffect(()=>{\r\n        sendRequest();\r\n    },[sendRequest]);\r\n    if(status==='pending'){\r\n        return <div className='centered'>\r\n            <p>Loading...</p>\r\n        </div>\r\n    }\r\n    if(error){\r\n        return <div className='centered'>\r\n            <p>{error}</p>\r\n        </div>\r\n    }\r\n    if(status==='completed' && (!loadedQuotes || loadedQuotes.length===0)){\r\n        return <div className='centered'>\r\n            <p>No Quotes Found\r\n                <NotFound/>\r\n            </p>\r\n        </div>\r\n    }\r\n    return <div>\r\n        <QuoteList quotes={loadedQuotes}/>\r\n    </div>\r\n}\r\nexport default Allquote;","import { useEffect, useRef } from 'react';\nimport useHttp from '../../hooks/use-http';\nimport { addComment } from '../../lib/api';\nimport classes from './NewCommentForm.module.css';\n\nconst NewCommentForm = (props) => {\n  const commentTextRef = useRef();\n\n\n  const { sendRequest, status,error } = useHttp(addComment);\n\n  //\n  const { onAddedComment } = props;\n  useEffect(() => {\n    if (status === 'completed' && !error) {\n      onAddedComment();\n    }\n  }, [status,error, onAddedComment]);\n\n\n\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n\n\n    // optional: Could validate here\n\n    // send comment to server\n    sendRequest(\n      { commentData: { text: commentTextRef.current.value } ,quoteId:props.quoteId});\n\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      {status === 'pending' && (\n        <div className='centered focused'>\n          <p>Loading...</p>\n        </div>\n      )}\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor='comment'>Your Comment</label>\n        <textarea id='comment' rows='5' ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className='btn'>Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","import classes from './CommentItem.module.css';\n\nconst CommentItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <p>{props.text}</p>\n    </li>\n  );\n};\n\nexport default CommentItem;\n","import CommentItem from './CommentItem';\nimport classes from './CommentsList.module.css';\n\nconst CommentsList = (props) => {\n  return (\n    <ul className={classes.comments}>\n      {props.comments.map((comment) => (\n        <CommentItem key={comment.id} text={comment.text} />\n      ))}\n    </ul>\n  );\n};\n\nexport default CommentsList;\n","import { useState, useEffect, useCallback } from \"react\";\nimport { useParams } from \"react-router\";\nimport classes from \"./Comments.module.css\";\nimport NewCommentForm from \"./NewCommentForm\";\nimport useHttp from \"../../hooks/use-http\";\nimport CommentsList from \"./CommentsList\";\nimport { getAllComments } from \"../../lib/api\";\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n  const { quoteId } = params;\n  const { sendRequest, status, data: loadedComments } = useHttp(getAllComments);\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n  const addedCommentHandler = useCallback(() => {\n    setIsAddingComment(false);\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n  let comments;\n  if (status === \"pending\") {\n    comments = (\n      <div className=\"centered\">\n        <p>Loading...</p>\n      </div>\n    );\n  }\n  if (status === \"completed\" && loadedComments && loadedComments.length > 0) {\n    comments = <CommentsList comments={loadedComments} />;\n  }\n  if (\n    status === \"completed\" &&\n    (!loadedComments || loadedComments.length === 0)\n  ) {\n    comments = <p className=\"centered\">No comments were added yet!</p>;\n  }\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className=\"btn\" onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && (\n        <NewCommentForm\n          quoteId={quoteId}\n          onAddedComment={addedCommentHandler}\n        />\n      )}\n      {comments}\n    </section>\n  );\n};\n\nexport default Comments;\n","import classes from './HighlightedQuote.module.css';\n\nconst HighlightedQuote = (props) => {\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","// import { useParams } from \"react-router\";\r\nimport { Route, useParams,Link } from \"react-router-dom\";\r\nimport { Comments } from \"../components/comments/Comments\";\r\nimport { Outlet } from \"react-router-dom\";\r\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\r\nimport useHttp from \"../hooks/use-http\";\r\nimport { getSingleQuote } from \"../lib/api\";\r\n// const DUMMY_QUOTES = [\r\n//   { id: \"q1\", author: \"Max\", text: \"Learning React is fun!\" },\r\n//   { id: \"q2\", author: \"Maximilian\", text: \"Learning React is great!\" },\r\n// ];\r\nimport {useEffect} from 'react';\r\nfunction QuoteDetail() {\r\n  const Params = useParams();\r\n  const { sendRequest, status, data: loadedQuote, error } = useHttp(\r\n    getSingleQuote,\r\n    true\r\n  );\r\n  useEffect(() => {\r\n    sendRequest(Params.quoteId);\r\n  }, [sendRequest, Params.quoteId]);\r\n  if (status === \"pending\") {\r\n    return (\r\n      <div className=\"centered\">\r\n        <p>Loading...</p>\r\n      </div>\r\n    );\r\n  }\r\n  if (error) {\r\n    return (\r\n      <div className=\"centered\">\r\n\r\n        <p>{error}</p>\r\n      </div>\r\n    );\r\n  }\r\n  if (status === \"completed\" && (!loadedQuote || loadedQuote.length === 0)) {\r\n    return (\r\n      <div className=\"centered\">\r\n        <p>No Quotes Found</p>\r\n      </div>\r\n    );\r\n  }\r\n  //\r\n\r\n  // const quote = DUMMY_QUOTES.find((quote) => quote.id === Params.quoteId);\r\n  if (!loadedQuote) {\r\n    return <p>No Quote Found</p>;\r\n  }\r\n  return (\r\n    <div>\r\n      <h1>QuoteDetail</h1>\r\n      <HighlightedQuote text={loadedQuote.text} author={loadedQuote.author} />\r\n      {/* <div className=\"centered\">\r\n        <Link className=\"btn--flat\" to={`/quotes/${Params.quoteId}/comments`} >Load Comments</Link>\r\n        </div> */}\r\n      <Outlet />\r\n    </div>\r\n  );\r\n}\r\nexport default QuoteDetail;\r\n","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","import classes from './LoadingSpinner.module.css';\n\nconst LoadingSpinner = () => {\n  return <div className={classes.spinner}></div>;\n}\n\nexport default LoadingSpinner;\n","import { useRef,useState } from 'react';\n// import {Prompt} from 'react-router-dom';\nimport Card from '../UI/Card';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './QuoteForm.module.css';\n\nconst QuoteForm = (props) => {\n  const[isEntered,setIsEntering]=useState(false);\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n  function formFocusHandler(){\n    setIsEntering(true);\n  }\n  function submitting(){\n    setIsEntering(false);\n  }\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n\n    // optional: Could validate here\n\n    props.onAdd({ author: enteredAuthor, text: enteredText });\n  }\n\n  return (\n    <Card>\n      <form onFocus={formFocusHandler}className={classes.form} onSubmit={submitFormHandler}>\n        {props.isLoading && (\n          <div className={classes.loading}>\n            <LoadingSpinner />\n          </div>\n        )}\n\n        <div className={classes.control}>\n          <label htmlFor='author'>Author</label>\n          <input type='text' id='author' ref={authorInputRef} />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor='text'>Text</label>\n          <textarea id='text' rows='5' ref={textInputRef}></textarea>\n        </div>\n        <div className={classes.actions}>\n          <button className='btn' onClick={submitting}>Add Quote</button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default QuoteForm;\n","import QuoteForm from '../components/quotes/QuoteForm'\r\nimport {useNavigate} from 'react-router-dom';\r\nimport useHttp from '../hooks/use-http';\r\nimport {addQuote} from '../lib/api'\r\nimport {useEffect} from 'react';\r\nfunction NewQuote(){\r\n    const {sendRequest,status}=useHttp(addQuote);\r\n    const history=useNavigate();\r\n    useEffect(()=>{\r\n        if(status==='completed'){\r\n            history('/quotes');\r\n        }\r\n    },[status,history]);\r\n    const addQuoteHandler=(quoteData)=>{\r\n\r\n        sendRequest(quoteData);\r\n        history('/quotes');\r\n    }\r\n    return <div>\r\n        <QuoteForm isLoading={status==='Pending'}onAdd={addQuoteHandler}/>\r\n    </div>\r\n}\r\nexport default NewQuote;","import classes from \"./MainNavigation.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nfunction MainNavigation() {\r\n    return (\r\n        <header className={classes.header}>\r\n        <div className={classes.logo}>Great Quotes</div>\r\n        <nav className={classes.nav}>\r\n            <ul>\r\n            <li>\r\n                <NavLink to=\"/quotes\" className={({ isActive }) => (isActive ? `${classes.active}` : `${classes.inactive}`)}>All Quotes</NavLink>\r\n            </li>\r\n            <li>\r\n                <NavLink to=\"/new-quote\" className={({ isActive }) => (isActive ? `${classes.active}` : `${classes.inactive}`)}>Add a Quote</NavLink>\r\n            </li>\r\n            </ul>\r\n        </nav>\r\n        </header>\r\n    );\r\n    }\r\n\r\nexport default MainNavigation;","import classes from \"./Layout.module.css\";\r\nimport MainNavigation from \"./MainNavigation\";\r\nfunction Layout(props) {\r\n    return (\r\n        <div>\r\n        <MainNavigation />\r\n        <main className={classes.main}>{props.children}</main>\r\n        </div>\r\n    );\r\n    }\r\nexport default Layout;","import { Routes, Route, Navigate, Router,Link } from \"react-router-dom\";\nimport Allquote from \"./pages/Allquote\";\nimport QuoteDetail from \"./pages/QuoteDetail\";\nimport NewQuote from \"./pages/Newquote\";\nimport Comments from \"./components/comments/Comments\";\nimport Layout from \"./components/layout/Layout\";\nimport NotFound from \"./pages/NotFound\";\nfunction App() {\n  return (\n    <div>\n      <Layout >\n      <Routes>\n        <Route path=\"/quotes\" element={<Allquote />} />\n        <Route path=\"/\" element={<Navigate replace to=\"/quotes\" />} />\n        <Route path=\"/quotes/:quoteId/\" element={<QuoteDetail />}>\n          {/* <Route path=\"comments\" element={<Comments />} /> */}\n          <Route\n            path=''\n            element={\n              <div className='centered'>\n                <Link className='btn--flat' to={`comments`}>\n                  Load Comments\n                </Link>\n              </div>\n            }\n          />\n          <Route path=\"comments\" element={<Comments />} />\n        </Route>\n        <Route path=\"/new-quote\" element={<NewQuote />} />\n        <Route path=\"*\" element={<NotFound/>}/>\n      </Routes>\n      </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}